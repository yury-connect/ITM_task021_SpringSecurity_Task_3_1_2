# Конфигурация MySQL // properties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/itm_task021_spring_security_task_3_1_2_db?allowPublicKeyRetrieval=true&verifyServerCertificate=false&useSSL=false&requireSSL=false&useLegacyDatetimeCode=false&amp&serverTimezone=UTC
spring.datasource.username=user
spring.datasource.password=1234



# так нельзя,

# Конфигурация Hibernate   //   -=!!! hibernate.dialect должен быть установлен в соответствии с версией MySQL !!!=-
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Управляет поведением Hibernate при создании и обновлении схемы базы данных. Возможные значения:
#   create — создает схему базы данных заново каждый раз при запуске.
#   create-drop — создает схему при запуске и удаляет её при завершении работы.
#   update — обновляет существующую схему, если нужно.
#   validate — проверяет, соответствует ли схема базы данных требованиям, без её изменения.
spring.jpa.hibernate.ddl-auto=create-drop


# Определяет, будет ли Hibernate выводить генерируемые SQL-запросы в консоль. Значение true включает отображение запросов, что полезно для отладки.
spring.jpa.show-sql=true
spring.jpa.format_sql=true




# Если вам нужно видеть не только сами запросы, но и их параметры
#hibernate.format_sql=true
#hibernate.use_sql_comments=true
#hibernate.generate_statistics=true

